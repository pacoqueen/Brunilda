[X] Añadir escala inferior de día/hora y marcas verticales de separación de meses
[X] Añadir tooltip con empleado - área tal y como está en DayLine
[X] Añadir labels a izquierda con empleados y a la derecha con totales
[X] Crear la vista de línea.
[X] Colorear diferente las tareas de determinadas áreas
[X] Slider de zoom y redibujar (a ver si consigues que sea fluido).
[X] Corregir el "glitch" de los totales de horas.
[X] Líneas horizontales para diferenciar los empleados.
[X] Mostrar fecha cada 15 días o cada mes o algo así.
[ ] Pensar una forma cómoda para el usuario de asignar tareas a empleados en líneas.
[X] Cambiar el sample en el módulo storage por un backend de verdad rápido y portable. Tipo MongoDB. En realidad los diccionarios parecen ideales para almacenarse en bases de datos NoSQL.
[ ] Opción de imprimir e imprimir calendario laboral de cada empleado.
[ ] Optimizar. La interfaz es lentísima cuando hay muchas tareas.
[ ] ¿Drag'n drop? ¿Selección múltiple de tareas y permitir arrastrarlas?
[ ] CRUD para empleados y líneas. 
[X] Cursor ocupado mientras redibujo gráfica.
[X] "Tiradores" en los extremos de una tarea para redimensionarla o, mejor, desplazarla.
[X] Redondear nuevas tareas a las 6, 14, 18, 22
[X] Otro total más con el total del año de cada empleado/línea a la derecha de los totales de la franja mostrada.
[ ] Intentar adivinar la hora en la que ha pinchado el usuario al crear una nueva tarea y pasarla por defecto al diálogo de seleccionar empleado/área.
[X] BUG: El último empleado y la última línea no se pueden asignar porque falla la función get_active_empleado_or_linea.
[X] Mostrar en el diálogo de asignación el empleado/línea que se va a asignar para que el usuario esté seguro de dónde ha pinchado.
[ ] Evitar asignar el mismo empleado más de una vez a la misma hora y en la misma línea, así como ponerlo en dos líneas a la vez. Tal vez el "se_solapa" de sample me pueda valer.
[ ] Falta un scroll horizontal cuando hay más empleados que alto del DrawingArea.
[ ] Calendario de vacaciones para las líneas donde no se pueden asignar empleados. Cada línea un calendario independiente.
[ ] Asignar por lotes: seleccionar patrón y rellenar todo el año del empleado. Pro ejemplo: 5x2 (5 turnos seguidos y dos de descanso).
[ ] Colores para cada línea de más claro a más oscuro dependiendo del turno. P. ej.: Gtx. rojo: rojo claro en turno de 6:00, rojo medio en 14 y oscuro en noche.
[ ] Arreglar scroll horizontal. Si no hay tareas, no permite llegar hasta diciembre en zoom = 31.
[ ] Ventana de configuración para horas anuales. Patrones de asingación automática. Número de empleados por turno. Colores de línaas y trabajadores por turno y turnos por día. Usar vista por línea para crear calendario de los turnos en los que debe trabajar cada línea cada día del año- Reusar la asingación automática por patrones de los empleados.
[ ] Mostrar también horas de recuperación en ventana.
[ ] Al crear un backend.area nuevo casca la interfaz gráfica (con show_empty = True).
[ ] Alerta que avise de los días que alguna línea tenga que trabajar pero no tenga trabajadores asignados, menos de los 3 por turno (configurable) o más.
[ ] En la impresión sacar por cada empleado y mes:
    * Gráfico de turnos (fracción de self.Scene de gui).
    * Horas totales.
    * Horas de recuperación = diferencia hasta 40 horas semanales (* semanas del mes -semanas fraccionadas, contar como 8 horas/día-)
    * Total horas noches.
    * Total horas recuperación (las que pasasn de las 40 semanales, se acumulan .
    * Horas extra anuales (las que pasan de las anuales, contando recuperación)
[ ] Permitir que el empleado y la fecha también sea modificable en el diálogo de asignar. Por defecto serán los datos que ahora están fijos en el label, pero mediante un desplegable o "algo", que se pueda cambiar para así poder asignar tareas fuera del rango mostrado.
[ ] Se debe también dejar que el scroll se desplace a fechas fuera del rango de self.data para poder desplazarnos a años futuros que todavía no tienen tareas.
